# https://github.com/RobinWu/number_to_capital_zh/blob/master/lib/number_to_chinese_amount_in_words_helper.rb
    def number_to_capital_zh(n)
      cNum = ["零","壹","贰","叁","肆","伍","陆","柒","捌","玖","-","-","万","仟","佰","拾","亿","仟","佰","拾","万","仟","佰","拾","元","角","分"]
      cCha = [['零元','零拾','零佰','零仟','零万','零亿','亿万','零零零','零零','零万','零亿','亿万','零元'], [ '元','零','零','零','万','亿','亿','零','零','万','亿','亿','元']]

      i = 0
      sNum = ""
      result = ""
      tmp = ("%.0f" % (n.abs.to_f * 100)).to_i
      return '零' if tmp == 0
      raise '整数部分加二位小数长度不能大于15' if tmp.to_s.size > 15
      sNum = tmp.to_s.rjust(15, ' ')

      for i in 0..14
        stemp = sNum.slice(i, 1)
        if stemp == ' '
          next
        else
          result += cNum[stemp.to_i] + cNum[i + 12];
        end
      end

      for m in 0..12
        result.gsub!(cCha[0][m], cCha[1][m])
      end

      if result.index('零分').nil? # 没有分时, 零角改成零
        result.gsub!('零角','零')
      else
        if result.index('零角').nil? # 有没有分有角时, 后面加"整"
          result += '整'
        else
          result.gsub!('零角', '整')
        end
      end

      result.gsub!('零分', '')
      "#{n < 0 ? "负" : ""}#{result}"
    end
